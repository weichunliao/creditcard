install.packages("SnowballC")
library(SnowballC)
install.packages(tm)
install.packages("tm")
c <- matrix(c(1:25), nrow=3)
c <- matrix(c(1:24), nrow=3)
c
v <- c[1:-1]
v <- as.vector(c[1:-1])
v <- as.vector(c[1,-1])
v
m <- c[-1,-1]
m
cosSim <- (m%*%v)/ sqrt(sum(v*v)*rowSums(m*m))
cosSim
a <- (
)
c <- c(1:7)
c
paste(c, spe=" ")
licence()
sessionInfo()
Sys.getlocale()
mu <- c(1, 3)
sigma <- matrix(c(2, -8*2^(1/2), -8*2^(1/2), 1))
sigma
sigma <- matrix(c(2, -8*2^(1/2), -8*2^(1/2), 1), nrow = 2)
sigma
install.packages("mixtools")
library("mixtools")
ellipse(mu, sigma, alpha = .05, npoints = 250, newplot = FALSE,#
        draw = TRUE, ...)
ellipse(mu, sigma))
ellipse(mu, sigma)
ellipse(mu, sigma, 0.5)
mu
as.vector(mu)
library(MASS)
bivn <- mvrnorm(1000, mu = c(1, 3), Sigma = matrix(c(2, -8*2^(1/2), -8*2^(1/2), 1), 2))
sigma <- matrix(c(2, -.8*2^(1/2), -.8*2^(1/2), 1), nrow = 2)
ellipse(mu, sigma, 0.5)
ellipse(mu, sigma, alpha = .5, npoints = 250, newplot = FALSE,#
        draw = TRUE, plot)
ellipse(mu, sigma, alpha = .5, npoints = 250, newplot = TRUE,#
        draw = TRUE, plot)
mu
sigma
ellipse(mu, sigma, alpha = .5, npoints = 250, newplot = TRUE,#
        draw = TRUE, lines)
ellipse(mu, sigma, alpha = .5, npoints = 250, newplot = TRUE,#
        draw = TRUE, plot)
ellipse(mu, sigma, alpha = .5, npoints = 250, newplot = TRUE)
x <- c(1:5); y <- x
plot(x, y, main="type=o")
lines(x, y, type="o")
lines(x, y, type=o)
lines(x, y, type="o")
par(pch=22, col="red") # plotting symbol and color #
par(mfrow=c(2,4)) # all plots on one page #
opts = c("p","l","o","b","c","s","S","h") #
for(i in 1:length(opts)){ #
  heading = paste("type=",opts[i]) #
  plot(x, y, type="n", main=heading) #
  lines(x, y, type=opts[i]) #
}
x <- c(1:5); y <- x # create some data#
par(pch=22, col="blue") # plotting symbol and color #
par(mfrow=c(2,4)) # all plots on one page #
opts = c("p","l","o","b","c","s","S","h") #
for(i in 1:length(opts){ #
  heading = paste("type=",opts[i]) #
  plot(x, y, main=heading) #
  lines(x, y, type=opts[i]) #
}
x <- c(1:5); y <- x # create some data#
par(pch=22, col="blue") # plotting symbol and color #
par(mfrow=c(2,4)) # all plots on one page #
opts = c("p","l","o","b","c","s","S","h") #
for(i in 1:length(opts)){ #
  heading = paste("type=",opts[i]) #
  plot(x, y, main=heading) #
  lines(x, y, type=opts[i]) #
}
x <- c(1:5); y <- x # create some data#
par(pch=22, col="blue") # plotting symbol and color #
par(mfrow=c(2,4)) # all plots on one page #
opts = c("p","l","o","b","c","s","S","h") #
for(i in 1:length(opts)){ #
  heading = paste("type=",opts[i]) #
  plot(x, y, main=heading) #
}
x <- c(1:5); y <- x # create some data#
par(pch=22, col="blue") # plotting symbol and color #
par(mfrow=c(2,4)) # all plots on one page #
opts = c("p","l","o","b","c","s","S","h") #
for(i in 1:length(opts)){ #
  heading = paste("type=",opts[i]) #
  lines(x, y, type=opts[i]) #
}
plot(-4:4, -4:4, type = "n")  # setting up coord. system#
points(rnorm(200), rnorm(200), col = "red")#
points(rnorm(100)/2, rnorm(100)/2, col = "blue", cex = 1.5)
point(x,y, col="yellow")
points(x,y, col="yellow")
points(x,y, col="red")
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(x,y, col="red")
points((x-3),(y-2), col="blue")
setwd("/Users/weichun/Desktop/creditcard")
data <- read.csv("tasr_2005p1.csv")
head(data)
unique(id)
unique(data$author)
summary(data)
summary(data$author)
attach(data)
length(author)
length(unique(author)))
length(unique(author))
dtime <- as.POSIXIlt(date)
dtime <- as.POSIXIIt(date)
dtime <- as.POSIXlt(date)
head(data)
data2 <- load("tasr_2005p1.rdata")
head(data2)
data2
head("ymsg1")
head(ymsg1)
head(data)
data <- ymsg1
head(data)
attach(data)
head(data$id)
head(data$author)
summary(data$author)
summary(data$author)
unique(data$author)
length(unique(data$author))
aggregate(data, by=author, count)
length(unique(author))
aggregate(data, by=list(unique(author)), FUN= length)
aggregate(data, by=list(author), FUN= length)
head(aggregate(data, by=list(author), FUN= length))
head(sort(aggregate(data, by=list(author), FUN= length)))
head(sort(aggregate(data, by=list(author), FUN= length)))
head(sort(aggregate(data, by=list(author), FUN= length)$content))
sort(aggregate(data, by=list(author), FUN= length)$content)
sort(aggregate(data, by=list(author), FUN= length)$content, decreasing = T)
head(sort(aggregate(data, by=list(author), FUN= length)$content, decreasing = T))
aggregate(data, by=list(author), FUN= length)$content, decreasing = T)[head(order(aggregate(data, by=list(author), FUN= length)$content, decreasing = T))]
aggregate(data, by=list(author), FUN= length)$content, decreasing = T[head(order(aggregate(data, by=list(author), FUN= length)$content, decreasing = T))]
head(order(aggregate(data, by=list(author), FUN= length)$content, decreasing = T))
a <- head(order(aggregate(data, by=list(author), FUN= length)$content, decreasing = T))
x <-aggregate(id~author,FUN=length)
head(x)
table(data)
table(author)
sort(table(author))[1:6]
sort(table(author), decreasing=TRUE)[1:6]
